@page "/movies"
@using Sep6Client.Model
@using Sep6Client.Data.Movies
@inject IMoviesWebService moviesWebService
@inject NavigationManager nav

<PageTitle>Movies</PageTitle>
<h1>Movies</h1>

@if (movies == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <table class="table">
            <thead>
            <tr>
                <th>Title</th>
                <th>ID</th>
                <th>Release Year</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var movie in movies.Skip(movieCounter).Take(25))
            {
                <tr>
                    <td>@movie.Title</td>
                    <td>@movie.Id</td>
                    <td>@movie.Year</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    
    <div>
        @if (pageNr != 1)
        {
            <button @onclick="OnLoadPrevious">@leftArrow-- Previous</button>
        }
        <button @onclick="OnLoadNext">Next --></button>
    </div>
}
<p style="color: red">@errorMessage</p>

@code 
{
    private IList<Movie>? movies;
    private int movieCounter { get; set; }
    private int pageNr = 0;
    private int moviesPerPage = 25;
    private string errorMessage = "";
    private char leftArrow = '<';

    protected override async Task OnInitializedAsync()
    {
        // TODO: Set movieCounter variable from cookies if available - AldÃ­s 16.05.2023

        try
        {
            UpdateMovieCounter();
            await LoadNewMoviesAsync();
            if (pageNr == 0)
                pageNr = 1;
        }
        catch(Exception e)
        {
            errorMessage = $"Exception thrown: {e.GetType()}\n{e.StackTrace}";
            await Console.Out.WriteLineAsync(e.StackTrace);
        }
    }

    private async Task LoadNewMoviesAsync()
    {
        Console.WriteLine("Loading new movies...");
        movies = await moviesWebService.GetMoviesAsync(movieCounter);
    }

    private void UpdateMovieCounter()
    {
        movieCounter = pageNr * moviesPerPage;
        Console.WriteLine($"Movie counter: {movieCounter}");
    }

    private void Refresh()
    {
        Console.WriteLine("Refreshing...");
        nav.NavigateTo("/movies");
    }

    private async Task OnLoadNext()
    {
        Console.WriteLine("Next button clicked.");
        pageNr++;
        UpdateMovieCounter();
        // Tried flipping the comparator, haven't tested it
        if (movies.Count > movieCounter+1)
            await LoadNewMoviesAsync();
        Refresh();
    }
    
    private async Task OnLoadPrevious()
    {
        Console.WriteLine("Previous button clicked.");
        pageNr--;
        UpdateMovieCounter();
        if (movies.Count < movieCounter-1)
            await LoadNewMoviesAsync();
        Refresh();
    }
}