@page "/movies"
@using Sep6Client.Model
@using Sep6Client.Data.Movies
@inject IMoviesWebService moviesWebService

<PageTitle>Movies</PageTitle>
<h1>Movies</h1>

@if (movies == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <table class="table">
            <thead>
            <tr>
                <th>Title</th>
                <th>ID</th>
                <th>Release Year</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var movie in movies.Skip(movieCounter).Take(25))
            {
                <tr>
                    <td>@movie.Title</td>
                    <td>@movie.Id</td>
                    <td>@movie.Year</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    
    <div>
        @if (pageNr != 1)
        {
            <a onclick="@OnLoadPrevious()"> @leftArrow-- Previous</a>
        }
        <a onclick="@OnLoadNext()">Next --></a>
    </div>
}
<p style="color: red">@errorMessage</p>

@code 
{
    private IList<Movie>? movies;

    private int movieCounter { get; set; }
    private int pageNr = 1;
    private int moviesPerPage = 25;
    private string errorMessage = "";
    private char leftArrow = '>';

    protected override async Task OnInitializedAsync()
    {
        // TODO: Set variable from cookies if available - Ald√≠s 16.05.2023
        movieCounter = 0;
        
        try
        {
            await LoadNewMovies();
        }
        catch(Exception e)
        {
            errorMessage = $"Exception thrown: {e.GetType()}\n{e.StackTrace}";
            await Console.Out.WriteLineAsync(e.StackTrace);
        }
    }

    private async Task LoadNewMovies()
    {
        movies = await moviesWebService.GetMoviesAsync(movieCounter);
    }

    private void UpdateMovieCounter()
    {
        movieCounter = pageNr * moviesPerPage;
    }

    private async Task OnLoadNext()
    {
        pageNr++;
        UpdateMovieCounter();
        if (movies[movieCounter + 1] == null)
            await LoadNewMovies();
    }
    
    private async Task OnLoadPrevious()
    {
        pageNr--;
        UpdateMovieCounter();
        if (movies[movieCounter - 1] == null)
            await LoadNewMovies();
    }
}