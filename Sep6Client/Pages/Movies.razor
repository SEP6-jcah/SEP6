@page "/movies"
@using Sep6Client.Model
@using Sep6Client.Data.Movies
@inject IMoviesWebService moviesWebService
@inject NavigationManager nav

<PageTitle>Movies</PageTitle>
<h1>Movies</h1>

@if (movies == null)
{
    <p><em>Loading...</em></p>
}
else
{
    if (movies.Count == 0)
    {
        SetErrorMessage("No movies to display.");
    }
    <div>
        <table class="table">
            <thead>
            <tr>
                <th>Title</th>
                <th>ID</th>
                <th>Release Year</th>
                <th>More...</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var movie in movies)
            {
                var id = movie.Id;
                <tr>
                    <td>@movie.Title</td>
                    <td>@movie.Id</td>
                    <td>@movie.Year</td>
                    <td><button @onclick="() => OpenDetails(id)">Details</button></td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    
    <div>
        @if (pageNr != 1)
        {
            <button @onclick="OnLoadPrevious">@leftArrow-- Previous</button>
        }
        <button @onclick="OnLoadNext">Next --></button>
    </div>
}
<p style="color: red">@errorMessage</p>

@code 
{
    private IList<Movie>? movies;
    private int movieCounter;
    private int pageNr = 1;
    private string errorMessage = "";
    private char leftArrow = '<';

    protected override async Task OnInitializedAsync()
    {
        // TODO: Set movieCounter variable from cookies if available - Aldís 16.05.2023

        try
        {
            movieCounter = 0;
            await LoadNewMoviesAsync();
        }
        catch(Exception e)
        {
            // TODO: Change UI error message to show something understandable to laymen - Aldís 17.05.23
            errorMessage = $"Exception thrown: {e.GetType()}\n{e.StackTrace}";
            await Console.Out.WriteLineAsync(e.StackTrace);
        }
    }

    private void SetErrorMessage(string message)
    {
        errorMessage = message;
    }

    private async Task LoadNewMoviesAsync()
    {
        Console.WriteLine("Loading new movies...");
        movies = await moviesWebService.GetMoviesAsync(movieCounter);
    }

    private async Task OnLoadNext()
    {
        Console.WriteLine("Next button clicked.");
        pageNr++;
        movieCounter += 25;
        await Refresh();
    }
    
    private async Task OnLoadPrevious()
    {
        Console.WriteLine("Previous button clicked.");
        pageNr--;
        movieCounter -= 25;
        await Refresh();
    }
    
    private async Task Refresh()
    {
        await LoadNewMoviesAsync();
        Console.WriteLine("Refreshing...");
        nav.NavigateTo("/movies");
    }

    private void OpenDetails(int id)
    {
        nav.NavigateTo($"/MovieDetails/{id}");
    }
}